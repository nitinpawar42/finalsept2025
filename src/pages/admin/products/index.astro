---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { db } from '../../../firebase/admin';

const productsRef = db.collection('products');
const productsSnapshot = await productsRef.get();
const products = productsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
---

<AdminLayout title="Manage Products">
  <div class="container mx-auto">
    <h1 class="text-2xl font-bold mb-6">Manage Products</h1>

    <!-- Add Product Form -->
    <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md mb-8">
      <h2 class="text-xl font-bold mb-4">Add New Product</h2>
      <form id="add-product-form">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <input type="text" name="name" placeholder="Product Name" class="w-full px-3 py-2 border rounded-lg" required>
          <input type="number" name="price" placeholder="Price" class="w-full px-3 py-2 border rounded-lg" required>
          <input type="number" name="weight" placeholder="Weight (grams)" class="w-full px-3 py-2 border rounded-lg" required>
          <input type="number" name="length" placeholder="Length (cm)" class="w-full px-3 py-2 border rounded-lg" required>
          <input type="number" name="breadth" placeholder="Breadth (cm)" class="w-full px-3 py-2 border rounded-lg" required>
          <input type="number" name="height" placeholder="Height (cm)" class="w-full px-3 py-2 border rounded-lg" required>
          <textarea name="description" placeholder="Description" class="w-full px-3 py-2 border rounded-lg md:col-span-2" required></textarea>
          <input type="file" name="image" accept="image/*" class="w-full px-3 py-2 border rounded-lg md:col-span-2" required>
        </div>
        <button type="submit" class="mt-4 w-full bg-indigo-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-indigo-700">Add Product</button>
      </form>
    </div>

    <!-- Product List -->
    <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
        <h2 class="text-xl font-bold mb-4">Product List</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {products.map(product => (
                <div class="border rounded-lg p-4">
                    <img src={product.imageUrl} alt={product.name} class="w-full h-48 object-cover rounded-md mb-4"/>
                    <h3 class="text-lg font-bold">{product.name}</h3>
                    <p class="text-gray-600 dark:text-gray-400">â‚¹{product.price}</p>
                    <p class="text-sm mt-2">{product.description}</p>
                    <div class="mt-4 flex justify-end">
                        <a href={`/admin/products/edit/${product.id}`} class="text-indigo-500 hover:underline">Edit</a>
                        <button class="delete-product-btn text-red-500 hover:underline ml-4" data-id={product.id}>Delete</button>
                    </div>
                </div>
            ))}
        </div>
    </div>
  </div>

  <script>
    document.getElementById('add-product-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);

      const response = await fetch('/api/products', {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        window.location.reload();
      } else {
        const error = await response.json();
        alert(`Error: ${error.message}`);
      }
    });

    document.querySelectorAll('.delete-product-btn').forEach(button => {
      button.addEventListener('click', async (e) => {
        const id = (e.target as HTMLElement).dataset.id;
        if (confirm('Are you sure you want to delete this product?')) {
          const response = await fetch(`/api/products?id=${id}`, {
            method: 'DELETE',
          });

          if (response.ok) {
            window.location.reload();
          } else {
            const error = await response.json();
            alert(`Error: ${error.message}`);
          }
        }
      });
    });
  </script>
</AdminLayout>
