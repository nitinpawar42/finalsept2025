---
import PublicLayout from '../layouts/PublicLayout.astro';
import { db } from '../lib/firebase/admin';

const { resellerId } = Astro.params;

// Fetch reseller info to ensure the ID is valid
const resellerRef = db.collection('users').doc(resellerId);
const resellerDoc = await resellerRef.get();

if (!resellerDoc.exists || resellerDoc.data().role !== 'reseller') {
  // Or show a 404 not found page
  return new Response('Reseller not found', { status: 404 });
}

const reseller = resellerDoc.data();

// Fetch all products
const productsRef = db.collection('products');
const productsSnapshot = await productsRef.get();
const products = productsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
---

<PublicLayout title={`{reseller.businessName}'s Store`}>
  <div class="container mx-auto">
    <div class="text-center mb-12">
      <h1 class="text-4xl font-extrabold tracking-tight text-gray-900 dark:text-white sm:text-5xl md:text-6xl">{
        reseller.businessName}'s Store
      </h1>
      <p class="mt-3 max-w-md mx-auto text-base text-gray-500 dark:text-gray-400 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl">
        Welcome to my official store. Happy shopping!
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
      {products.map(product => (
        <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-xl overflow-hidden transform hover:-translate-y-2 transition-transform duration-300">
          <img src={product.imageUrl} alt={`Image of ${product.name}`} class="w-full h-56 object-cover"/>
          <div class="p-6">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white">{product.name}</h3>
            <p class="mt-2 text-lg font-semibold text-indigo-500 dark:text-indigo-400">â‚¹{product.price.toFixed(2)}</p>
            <p class="mt-3 text-sm text-gray-600 dark:text-gray-400 h-20 overflow-y-auto">{product.description}</p>
            <button class="add-to-cart-btn mt-6 w-full bg-indigo-500 text-white font-bold py-3 px-5 rounded-lg hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-300"
                    data-product-id={product.id}
                    data-product-name={product.name}
                    data-product-price={product.price}
                    data-product-image={product.imageUrl}>
              Add to Cart
            </button>
          </div>
        </div>
      ))}
    </div>
  </div>

  <script define:vars={{ resellerId }}>
    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
      button.addEventListener('click', (e) => {
        const btn = e.currentTarget;
        const productId = btn.dataset.productId;
        const productName = btn.dataset.productName;
        const productPrice = parseFloat(btn.dataset.productPrice);
        const productImage = btn.dataset.productImage;

        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        
        // Store resellerId on the first add
        if (cart.length === 0) {
            localStorage.setItem('resellerId', resellerId);
        } else {
            const storedResellerId = localStorage.getItem('resellerId');
            if (storedResellerId !== resellerId) {
                if (confirm('You have items from another reseller in your cart. Do you want to clear your cart and add this item?')) {
                    cart = []; // Clear the cart
                    localStorage.setItem('resellerId', resellerId);
                } else {
                    return; // Do not add the item
                }
            }
        }

        const existingItem = cart.find(item => item.id === productId);

        if (existingItem) {
          existingItem.quantity++;
        } else {
          cart.push({
            id: productId,
            name: productName,
            price: productPrice,
            image: productImage,
            quantity: 1,
          });
        }

        localStorage.setItem('cart', JSON.stringify(cart));

        // Animate button
        btn.classList.add('animate-pulse');
        btn.textContent = 'Added!';
        setTimeout(() => {
            btn.classList.remove('animate-pulse');
            btn.textContent = 'Add to Cart';
        }, 1500);

        // Dispatch a custom event to update the cart count in the header
        window.dispatchEvent(new CustomEvent('cart-updated'));
      });
    });
  </script>
</PublicLayout>
